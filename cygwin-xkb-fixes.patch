Cygwin: Force keyboard state onto VCK at startup

Copy the state of the Windows keyboard device to the Virtual Core Keyboard at startup.

Otherwise, this happens lazily after the first keypress, which can lead to applications
which are started from a shell window and inspect the keyboard state before a character is
typed getting the wrong idea about the desired keymap (e.g. xemacs shows this behaviour)

Also give the native keyboard/mouse devices names

---
 xserver/hw/xwin/InitInput.c |    3 +++
 xserver/hw/xwin/winkeybd.c  |    6 ++++++
 2 files changed, 9 insertions(+)

Index: xorg-server-1.5.3/xserver/hw/xwin/InitInput.c
===================================================================
--- xorg-server-1.5.3.orig/xserver/hw/xwin/InitInput.c	2008-11-17 20:56:03.000000000 +0000
+++ xorg-server-1.5.3/xserver/hw/xwin/InitInput.c	2008-12-11 16:27:29.109375000 +0000
@@ -31,6 +31,7 @@
 #endif
 #include "win.h"
 #include "dixstruct.h"
+#include "inputstr.h"
 
 
 /*
@@ -149,6 +150,8 @@
   RegisterPointerDevice (pMouse);
   RegisterKeyboardDevice (pKeyboard);
 
+  pMouse->name = strdup("Windows mouse");
+  pKeyboard->name = strdup("Windows keyboard");
 
   mieqInit ();
 
Index: xorg-server-1.5.3/xserver/hw/xwin/winkeybd.c
===================================================================
--- xorg-server-1.5.3.orig/xserver/hw/xwin/winkeybd.c	2008-11-27 22:23:42.000000000 +0000
+++ xorg-server-1.5.3/xserver/hw/xwin/winkeybd.c	2008-12-16 18:20:35.015625000 +0000
@@ -288,12 +288,18 @@
             {  
               winErrorFVerb (1, "winKeybdProc - Error initializing keyboard AutoRepeat (No XKB)\n");
             }
+
+	  XkbSetExtension(pDeviceInt, ProcessKeyboardEvent);
         }
 #endif
       break;
       
     case DEVICE_ON: 
       pDevice->on = TRUE;
+
+      // immediately copy the state of this keyboard device to the VCK
+      // (which otherwise happens lazily after the first keypress)
+      SwitchCoreKeyboard(pDeviceInt);
       break;
 
     case DEVICE_CLOSE:
