--- origsrc/xorg-server-1.3.0.0/hw/dmx/dmxinit.c	2006-12-22 02:06:49.000000000 -0600
+++ src/xorg-server-1.3.0.0/hw/dmx/dmxinit.c	2008-10-05 01:24:00.200705000 -0500
@@ -852,6 +852,12 @@
     }
 }
 
+#ifdef DDXBEFORERESET
+void ddxBeforeReset(void)
+{
+}
+#endif
+
 /** This function is called in Xserver/dix/main.c from \a main() when
  * dispatchException & DE_TERMINATE (which is the only way to exit the
  * main loop without an interruption. */
--- origsrc/xorg-server-1.3.0.0/hw/kdrive/ephyr/ephyrinit.c	2006-11-16 12:01:23.000000000 -0600
+++ src/xorg-server-1.3.0.0/hw/kdrive/ephyr/ephyrinit.c	2008-10-05 03:33:18.779773500 -0500
@@ -117,6 +117,13 @@
   return KdProcessArgument (argc, argv, i);
 }
 
+#ifdef DDXBEFORERESET
+void
+ddxBeforeReset (void)
+{
+}
+#endif
+
 void
 OsVendorInit (void)
 {
--- origsrc/xorg-server-1.3.0.0/hw/kdrive/fake/fakeinit.c	2006-11-16 12:01:23.000000000 -0600
+++ src/xorg-server-1.3.0.0/hw/kdrive/fake/fakeinit.c	2008-10-05 03:33:04.655858300 -0500
@@ -59,6 +59,13 @@
     return KdProcessArgument (argc, argv, i);
 }
 
+#ifdef DDXBEFORERESET
+void
+ddxBeforeReset (void)
+{
+}
+#endif
+
 void
 OsVendorInit (void)
 {
--- origsrc/xorg-server-1.3.0.0/hw/kdrive/sdl/sdl.c	2006-06-06 12:13:53.000000000 -0500
+++ src/xorg-server-1.3.0.0/hw/kdrive/sdl/sdl.c	2008-10-05 03:31:09.477204700 -0500
@@ -409,6 +409,12 @@
 	return KdProcessArgument(argc, argv, i);
 }
 
+#ifdef DDXBEFORERESET
+void ddxBeforeReset (void)
+{
+}
+#endif
+
 void sdlTimer(void)
 {
 	static int buttonState=0;
--- origsrc/xorg-server-1.7.0.901/include/os.h	2009-10-14 23:09:53.798171000 -0500
+++ src/xorg-server-1.7.0.901/include/os.h	2009-10-15 00:30:39.514268900 -0500
@@ -83,6 +83,10 @@ typedef struct _NewClientRec *NewClientP
 #include <stdio.h>
 #include <stdarg.h>
 
+#ifdef DDXBEFORERESET
+extern void ddxBeforeReset (void);
+#endif
+
 #ifdef DDXOSVERRORF
 extern _X_EXPORT void (*OsVendorVErrorFProc)(const char *, va_list args);
 #endif
