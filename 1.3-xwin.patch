--- origsrc/xorg-server-1.3.0.0/configure.ac	2007-04-20 02:23:40.000000000 +0100
+++ src/xorg-server-1.3.0.0/configure.ac	2008-10-02 16:33:48.250000000 +0100
@@ -1425,13 +1425,14 @@
 		mingw*) XWIN="yes" ;;
 		*) XWIN="no" ;;
 	esac
-	XWIN_LIBS="$FB_LIB $MI_LIB $XEXT_LIB $XI_LIB $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $DAMAGE_LIB $LAYER_LIB $XPSTUBS_LIB $OS_LIB $SHADOW_LIB"
+	XWIN_LIBS="$FB_LIB $MI_LIB $FIXES_LIB $XEXT_LIB $DBE_LIB $XI_LIB $RANDR_LIB $RENDER_LIB $XTRAP_LIB $RECORD_LIB $GLX_LIBS $XKB_LIB $XKB_STUB_LIB $COMPOSITE_LIB $DAMAGE_LIB $MIEXT_DAMAGE_LIB $MIEXT_SHADOW_LIB $MIEXT_LAYER_LIB $XPSTUBS_LIB $OS_LIB $LBX_LIB"
 	AC_SUBST([XWIN_LIBS])
 fi
 AC_MSG_RESULT([$XWIN])
 
 if test "x$XWIN" = xyes; then
 	XWIN_SERVER_NAME=XWin
+	AC_CHECK_TOOL(WINDRES, windres)
 	case $host_os in
 		cygwin*)
 			PKG_CHECK_MODULES([XWINMODULES],[x11 xdmcp xau xfont])
--- origsrc/xorg-server-1.3.0.0/hw/xwin/InitInput.c	2006-11-16 18:01:26.000000000 +0000
+++ src/xorg-server-1.3.0.0/hw/xwin/InitInput.c	2008-10-02 16:33:48.265625000 +0100
@@ -31,9 +31,6 @@
 #include <xwin-config.h>
 #endif
 #include "win.h"
-#ifdef XWIN_CLIPBOARD
-# include "../../Xext/xf86miscproc.h"
-#endif
 #include "dixstruct.h"
 
 
--- origsrc/xorg-server-1.3.0.0/hw/xwin/Makefile.am	2006-11-16 18:01:26.000000000 +0000
+++ src/xorg-server-1.3.0.0/hw/xwin/Makefile.am	2008-10-02 16:33:48.265625000 +0100
@@ -121,6 +121,8 @@
 	winpriv.h \
 	winresource.h \
 	winwindow.h \
+	XWin.rc \
+	$(top_srcdir)/Xi/stubs.c \
 	$(top_srcdir)/mi/miinitext.c \
 	$(top_srcdir)/fb/fbcmap.c \
 	$(SRCS_CLIPBOARD) \
@@ -149,9 +151,14 @@
 XWin_LDADD = $(XORG_CORE_LIBS) \
 	     $(top_builddir)/fb/libfb.la \
              $(XWIN_LIBS) \
-             $(XWINMODULES_LIBS)
+             $(XWINMODULES_LIBS) \
+             XWin.o \
+             -lgdi32
+
+.rc.o:
+	$(WINDRES) --use-temp-file -i $< --input-format=rc -o $@ -O coff -DPROJECT_NAME=\"$(VENDOR_STRING_SHORT)\"
 
-XWin_LDFLAGS = -mwindows -static
+XWin_LDFLAGS = -mwindows
 
 winprefsyacc.h: winprefsyacc.c
 winprefslex.c: winprefslex.l winprefsyacc.c winprefsyacc.h
@@ -162,6 +168,7 @@
 AM_YFLAGS = -d
 AM_LFLAGS = -i
 AM_CFLAGS = -DHAVE_XWIN_CONFIG_H \
+            -DXFree86Server \
             $(XWINMODULES_CFLAGS)
 
 dist_man1_MANS = XWin.man XWinrc.man
--- origsrc/xorg-server-1.3.0.0/hw/xwin/win.h	2006-09-18 07:04:18.000000000 +0100
+++ src/xorg-server-1.3.0.0/hw/xwin/win.h	2008-10-02 16:33:48.265625000 +0100
@@ -314,6 +314,7 @@
 
 typedef Bool (*winFinishCreateWindowsWindowProcPtr)(WindowPtr pWin);
 
+typedef Bool (*winCreateScreenResourcesProc)(ScreenPtr);
 
 /* Typedef for DIX wrapper functions */
 typedef int (*winDispatchProcPtr) (ClientPtr);
@@ -564,6 +565,8 @@
   winCreatePrimarySurfaceProcPtr	pwinCreatePrimarySurface;
   winReleasePrimarySurfaceProcPtr	pwinReleasePrimarySurface;
 
+  winCreateScreenResourcesProc       pwinCreateScreenResources;
+
 #ifdef XWIN_MULTIWINDOW
   /* Window Procedures for MultiWindow mode */
   winFinishCreateWindowsWindowProcPtr	pwinFinishCreateWindowsWindow;
--- origsrc/xorg-server-1.3.0.0/hw/xwin/winmultiwindowwm.c	2006-09-18 07:04:18.000000000 +0100
+++ src/xorg-server-1.3.0.0/hw/xwin/winmultiwindowwm.c	2008-10-02 16:33:48.265625000 +0100
@@ -52,14 +52,7 @@
 #include <X11/cursorfont.h>
 
 /* Windows headers */
-#ifdef __CYGWIN__
-/* Fixups to prevent collisions between Windows and X headers */
-#define ATOM DWORD
-
-#include <windows.h>
-#else
-#include <Xwindows.h>
-#endif
+#include <X11/Xwindows.h>
 
 /* Local headers */
 #include "objbase.h"
@@ -1268,11 +1261,9 @@
   pWMInfo->atmWmDelete = XInternAtom (pWMInfo->pDisplay,
 				      "WM_DELETE_WINDOW",
 				      False);
-#ifdef XWIN_MULTIWINDOWEXTWM
   pWMInfo->atmPrivMap  = XInternAtom (pWMInfo->pDisplay,
-				      WINDOWSWM_NATIVE_HWND,
+				      "WINDOWSWM_NATIVE_HWND",
 				      False);
-#endif
 
 
   if (1) {
--- origsrc/xorg-server-1.3.0.0/hw/xwin/winscrinit.c	2006-09-18 07:04:18.000000000 +0100
+++ src/xorg-server-1.3.0.0/hw/xwin/winscrinit.c	2008-10-02 16:33:48.281250000 +0100
@@ -248,6 +248,25 @@
   return TRUE;
 }
 
+Bool
+winCreateScreenResources(ScreenPtr pScreen)
+{
+  winScreenPriv(pScreen);
+  Bool result;
+
+  result = pScreenPriv->pwinCreateScreenResources(pScreen);
+
+  /* Now the screen bitmap has been wrapped in a pixmap,
+     add that to the Shadow framebuffer */
+  if (!shadowAdd(pScreen, pScreen->devPrivate,
+		 pScreenPriv->pwinShadowUpdate, NULL, 0, 0))
+    {
+      ErrorF ("winCreateScreenResources - shadowAdd () failed\n");
+      return FALSE;
+    }
+
+  return result;
+}
 
 /* See Porting Layer Definition - p. 20 */
 Bool
@@ -438,15 +457,14 @@
       )
     {
 #if CYGDEBUG
-      winDebug ("winFinishScreenInitFB - Calling shadowInit ()\n");
+      winDebug ("winFinishScreenInitFB - Calling shadowSetup ()\n");
 #endif
-      if (!shadowInit (pScreen,
-		       pScreenPriv->pwinShadowUpdate,
-		       NULL))
-	{
-	  ErrorF ("winFinishScreenInitFB - shadowInit () failed\n");
-	  return FALSE;
-	}
+      shadowSetup(pScreen);
+
+      /* Wrap CreateScreenResources so we can add the screen pixmap
+         to the Shadow framebuffer after it's been created */
+      pScreenPriv->pwinCreateScreenResources = pScreen->CreateScreenResources;
+      pScreen->CreateScreenResources = winCreateScreenResources;
     }
 
 #ifdef XWIN_MULTIWINDOWEXTWM
